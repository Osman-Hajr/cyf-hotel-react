{"ast":null,"code":"var _jsxFileName = \"/home/ameer/React/cyf-hotel-react/src/SearchResults.js\";\nimport React, { useState } from 'react';\nimport FakeBookings from './data/fakeBookings.json';\nimport moment from 'moment';\nimport TableHead from './TableHead';\n\nconst SearchResults = () => {\n  const [rowClass, setRowClass] = useState(false);\n\n  const ToggleRow = () => {\n    setRowClass(!rowClass);\n  };\n\n  const dateDiffs = (checkInDate, checkOutDate) => {\n    const inDate = moment(checkInDate);\n    const outDate = moment(checkOutDate);\n    return outDate.diff(inDate, \"days\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"table\", {\n    class: \"table table-bordered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }\n  }, FakeBookings.map((info, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    className: rowClass ? \"grey-class\" : \"\",\n    onClick: ToggleRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    key: \"index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, info.id), /*#__PURE__*/React.createElement(\"td\", {\n    key: \"index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, info.title), /*#__PURE__*/React.createElement(\"td\", {\n    key: \"index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, info.firstName), /*#__PURE__*/React.createElement(\"td\", {\n    key: \"index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, info.surname), /*#__PURE__*/React.createElement(\"td\", {\n    key: \"index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, info.email), /*#__PURE__*/React.createElement(\"td\", {\n    key: \"index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, info.roomId), /*#__PURE__*/React.createElement(\"td\", {\n    key: \"index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, info.checkInDate), /*#__PURE__*/React.createElement(\"td\", {\n    key: \"index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, info.checkOutDate), /*#__PURE__*/React.createElement(\"td\", {\n    key: \"index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \" \", dateDiffs(info.checkInDate, info.checkOutDate))))));\n};\n\nexport default SearchResults;\n/* \n\nInstructions: Within the <SearchResults /> component or its child components, add an onClick handler to each row in the table (hint: on the <tr> element). When clicked, the row is \"selected\" and highlighted with a different colour. When clicked again, the row is unselected and the coloured highlighting is removed.\n\nHint: Use a new state variable for each row to record if the row is selected or not, and use this value to set a class to the className prop of the row.\n\nTest: Verify that each row of your table can be highlighted (on and off) independently when being clicked.\n\n*/","map":{"version":3,"sources":["/home/ameer/React/cyf-hotel-react/src/SearchResults.js"],"names":["React","useState","FakeBookings","moment","TableHead","SearchResults","rowClass","setRowClass","ToggleRow","dateDiffs","checkInDate","checkOutDate","inDate","outDate","diff","map","info","index","id","title","firstName","surname","email","roomId"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAGA,MAAMC,aAAa,GAAE,MAAM;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMO,SAAS,GAAG,MAAM;AACtBD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD;;AAGA,QAAMG,SAAS,GAAG,CAACC,WAAD,EAAcC,YAAd,KAA+B;AAC/C,UAAMC,MAAM,GAAGT,MAAM,CAACO,WAAD,CAArB;AACA,UAAMG,OAAO,GAAGV,MAAM,CAACQ,YAAD,CAAtB;AACA,WAAOE,OAAO,CAACC,IAAR,CAAaF,MAAb,EAAqB,MAArB,CAAP;AAED,GALD;;AAMA,sBACA;AAAO,IAAA,KAAK,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKV,YAAY,CAACa,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,kBAChB;AAAI,IAAA,SAAS,EAAIX,QAAQ,GAAE,YAAF,GAAgB,EAAzC;AAA6C,IAAA,OAAO,EAAEE,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,GAAG,EAAG,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBQ,IAAI,CAACE,EAAxB,CADA,eAEA;AAAI,IAAA,GAAG,EAAG,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBF,IAAI,CAACG,KAAxB,CAFA,eAGA;AAAI,IAAA,GAAG,EAAG,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBH,IAAI,CAACI,SAAxB,CAHA,eAIA;AAAI,IAAA,GAAG,EAAG,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBJ,IAAI,CAACK,OAAxB,CAJA,eAKA;AAAI,IAAA,GAAG,EAAG,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBL,IAAI,CAACM,KAAxB,CALA,eAMA;AAAI,IAAA,GAAG,EAAG,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBN,IAAI,CAACO,MAAxB,CANA,eAOA;AAAI,IAAA,GAAG,EAAG,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBP,IAAI,CAACN,WAAxB,CAPA,eAQA;AAAI,IAAA,GAAG,EAAG,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBM,IAAI,CAACL,YAAxB,CARA,eASA;AAAI,IAAA,GAAG,EAAG,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAoBF,SAAS,CAACO,IAAI,CAACN,WAAN,EAAmBM,IAAI,CAACL,YAAxB,CAA7B,CATA,CADD,CAFL,CAFA,CADA;AAyBD,CApCD;;AAqCA,eAAeN,aAAf;AAEA","sourcesContent":["import React, {useState} from 'react'\nimport FakeBookings from './data/fakeBookings.json'\nimport moment from 'moment'\nimport TableHead from './TableHead'\n\n\nconst SearchResults= () => {\n  const [rowClass, setRowClass] = useState(false)\n  const ToggleRow = () => {\n    setRowClass(!rowClass)\n  } \n  const dateDiffs = (checkInDate, checkOutDate) => {\n    const inDate = moment(checkInDate)\n    const outDate = moment(checkOutDate)\n    return outDate.diff(inDate, \"days\" )\n    \n  };\n  return(\n  <table class=\"table table-bordered\">\n    <TableHead />\n  <tbody>\n    \n      {FakeBookings.map((info, index) => (\n        <tr className = {rowClass? \"grey-class\": \"\"} onClick={ToggleRow}>\n        <td key = \"index\">{info.id}</td>\n        <td key = \"index\">{info.title}</td>\n        <td key = \"index\">{info.firstName}</td>\n        <td key = \"index\">{info.surname}</td>\n        <td key = \"index\">{info.email}</td>\n        <td key = \"index\">{info.roomId}</td>\n        <td key = \"index\">{info.checkInDate}</td>\n        <td key = \"index\">{info.checkOutDate}</td>\n        <td key = \"index\"> {dateDiffs(info.checkInDate, info.checkOutDate)}</td>\n      </tr>  \n        \n      ))}\n    \n  </tbody>  \n</table>\n\n  )\n\n}\nexport default SearchResults;\n\n/* \n\nInstructions: Within the <SearchResults /> component or its child components, add an onClick handler to each row in the table (hint: on the <tr> element). When clicked, the row is \"selected\" and highlighted with a different colour. When clicked again, the row is unselected and the coloured highlighting is removed.\n\nHint: Use a new state variable for each row to record if the row is selected or not, and use this value to set a class to the className prop of the row.\n\nTest: Verify that each row of your table can be highlighted (on and off) independently when being clicked.\n\n*/"]},"metadata":{},"sourceType":"module"}