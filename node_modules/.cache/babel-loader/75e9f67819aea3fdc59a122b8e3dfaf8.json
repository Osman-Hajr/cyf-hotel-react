{"ast":null,"code":"var _jsxFileName = \"/home/ameer/React/cyf-hotel-react/src/Bookings.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Search from \"./Search.js\";\nimport SearchResults from \"./SearchResults.js\";\n\nconst Bookings = () => {\n  useEffect(() => {\n    fetch(\"https://cyf-react.glitch.me/delayed\").then(response => response.json()).then(data => {\n      setLoading(false);\n      setBookings(data);\n    });\n  }, []);\n  const [bookings, setBookings] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const search = searchVal => {\n    console.log(\"TO DO!\", searchVal);\n    setBookings(bookings.filter(e => e.firstName.toLowerCase() === searchVal.toLowerCase() || e.surname.toLowerCase() === searchVal.toLowerCase()));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    search: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SearchResults, {\n    results: bookings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \"\\\"Data is loading... Still loading...\\\"\")));\n};\n\nexport default Bookings;\n/*\nInstructions: Still in the <Bookings /> component, implement the search method. It must use the searchVal variable (that you just passed from the <Search /> component) to filter the search results. The filter function should return bookings where firstName or surname match searchVal. Once filtered, use the setBookings function to update the results rendered in <SearchResults />.\n\nTest: Verify that when you enter an existing first name or surname and submit the form, the results are filtered accordingly in the customers table.\n*/","map":{"version":3,"sources":["/home/ameer/React/cyf-hotel-react/src/Bookings.js"],"names":["React","useState","useEffect","Search","SearchResults","Bookings","fetch","then","response","json","data","setLoading","setBookings","bookings","loading","search","searchVal","console","log","filter","e","firstName","toLowerCase","surname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,aAAP,MAA0B,oBAA1B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrBH,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAC,MAAAA,WAAW,CAACF,IAAD,CAAX;AACD,KALH;AAMD,GAPQ,EAON,EAPM,CAAT;AAQA,QAAM,CAACG,QAAD,EAAWD,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,OAAD,EAAUH,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;;AACA,QAAMc,MAAM,GAAGC,SAAS,IAAI;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,SAAtB;AACAJ,IAAAA,WAAW,CACTC,QAAQ,CAACM,MAAT,CACEC,CAAC,IACCA,CAAC,CAACC,SAAF,CAAYC,WAAZ,OAA8BN,SAAS,CAACM,WAAV,EAA9B,IACAF,CAAC,CAACG,OAAF,CAAUD,WAAV,OAA4BN,SAAS,CAACM,WAAV,EAHhC,CADS,CAAX;AAOD,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEP,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEF,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGC,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAHd,CADF,CADF;AASD,CA/BD;;AAiCA,eAAeT,QAAf;AACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Search from \"./Search.js\";\n\nimport SearchResults from \"./SearchResults.js\";\n\nconst Bookings = () => {\n  useEffect(() => {\n    fetch(\"https://cyf-react.glitch.me/delayed\")\n      .then(response => response.json())\n      .then(data => {\n        setLoading(false);\n        setBookings(data);\n      });\n  }, []);\n  const [bookings, setBookings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const search = searchVal => {\n    console.log(\"TO DO!\", searchVal);\n    setBookings(\n      bookings.filter(\n        e =>\n          e.firstName.toLowerCase() === searchVal.toLowerCase() ||\n          e.surname.toLowerCase() === searchVal.toLowerCase()\n      )\n    );\n  };\n\n  return (\n    <div className=\"App-content\">\n      <div className=\"container\">\n        <Search search={search} />\n        <SearchResults results={bookings} />\n        {loading && <p>\"Data is loading... Still loading...\"</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default Bookings;\n/*\nInstructions: Still in the <Bookings /> component, implement the search method. It must use the searchVal variable (that you just passed from the <Search /> component) to filter the search results. The filter function should return bookings where firstName or surname match searchVal. Once filtered, use the setBookings function to update the results rendered in <SearchResults />.\n\nTest: Verify that when you enter an existing first name or surname and submit the form, the results are filtered accordingly in the customers table.\n*/\n"]},"metadata":{},"sourceType":"module"}