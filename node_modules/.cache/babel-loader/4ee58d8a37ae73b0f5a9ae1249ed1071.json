{"ast":null,"code":"var _jsxFileName = \"/home/ameer/React/cyf-hotel-react/src/SearchResults.js\";\nimport React, { useState } from 'react';\nimport FakeBookings from './data/fakeBookings.json';\nimport moment from 'moment';\nimport TableRow from './TableRow';\n\nconst SearchResults = () => {\n  const dateDiffs = (checkInDate, checkOutDate) => {\n    const inDate = moment(checkInDate);\n    const outDate = moment(checkOutDate);\n    return outDate.diff(inDate, \"days\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"table\", {\n    class: \"table table-bordered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }, FakeBookings.map((info, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    key: \"index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, info.id), /*#__PURE__*/React.createElement(\"td\", {\n    key: \"index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, info.title), /*#__PURE__*/React.createElement(\"td\", {\n    key: \"index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, info.firstName), /*#__PURE__*/React.createElement(\"td\", {\n    key: \"index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, info.surname), /*#__PURE__*/React.createElement(\"td\", {\n    key: \"index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, info.email), /*#__PURE__*/React.createElement(\"td\", {\n    key: \"index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, info.roomId), /*#__PURE__*/React.createElement(\"td\", {\n    key: \"index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, info.checkInDate), /*#__PURE__*/React.createElement(\"td\", {\n    key: \"index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, info.checkOutDate), /*#__PURE__*/React.createElement(\"td\", {\n    key: \"index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \" \", dateDiffs(info.checkInDate, info.checkOutDate))))));\n};\n\nexport default SearchResults;\n/* \n\nInstructions: Within the <SearchResults /> component or its child components, add an onClick handler to each row in the table (hint: on the <tr> element). When clicked, the row is \"selected\" and highlighted with a different colour. When clicked again, the row is unselected and the coloured highlighting is removed.\n\nHint: Use a new state variable for each row to record if the row is selected or not, and use this value to set a class to the className prop of the row.\n\nTest: Verify that each row of your table can be highlighted (on and off) independently when being clicked.\n\n*/","map":{"version":3,"sources":["/home/ameer/React/cyf-hotel-react/src/SearchResults.js"],"names":["React","useState","FakeBookings","moment","TableRow","SearchResults","dateDiffs","checkInDate","checkOutDate","inDate","outDate","diff","map","info","index","id","title","firstName","surname","email","roomId"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AACA,MAAMC,aAAa,GAAE,MAAM;AAEzB,QAAMC,SAAS,GAAG,CAACC,WAAD,EAAcC,YAAd,KAA+B;AAC/C,UAAMC,MAAM,GAAGN,MAAM,CAACI,WAAD,CAArB;AACA,UAAMG,OAAO,GAAGP,MAAM,CAACK,YAAD,CAAtB;AACA,WAAOE,OAAO,CAACC,IAAR,CAAaF,MAAb,EAAqB,MAArB,CAAP;AAED,GALD;;AAMA,sBACA;AAAO,IAAA,KAAK,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKP,YAAY,CAACU,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,kBAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,GAAG,EAAG,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBD,IAAI,CAACE,EAAxB,CADF,eAEE;AAAI,IAAA,GAAG,EAAG,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBF,IAAI,CAACG,KAAxB,CAFF,eAGE;AAAI,IAAA,GAAG,EAAG,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBH,IAAI,CAACI,SAAxB,CAHF,eAIE;AAAI,IAAA,GAAG,EAAG,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBJ,IAAI,CAACK,OAAxB,CAJF,eAKE;AAAI,IAAA,GAAG,EAAG,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBL,IAAI,CAACM,KAAxB,CALF,eAME;AAAI,IAAA,GAAG,EAAG,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBN,IAAI,CAACO,MAAxB,CANF,eAOE;AAAI,IAAA,GAAG,EAAG,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBP,IAAI,CAACN,WAAxB,CAPF,eAQE;AAAI,IAAA,GAAG,EAAG,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBM,IAAI,CAACL,YAAxB,CARF,eASE;AAAI,IAAA,GAAG,EAAG,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAoBF,SAAS,CAACO,IAAI,CAACN,WAAN,EAAmBM,IAAI,CAACL,YAAxB,CAA7B,CATF,CADD,CAFL,CAJA,CADA;AA2BD,CAnCD;;AAoCA,eAAeH,aAAf;AAEA","sourcesContent":["import React, {useState} from 'react'\nimport FakeBookings from './data/fakeBookings.json'\nimport moment from 'moment'\nimport TableRow from './TableRow'\nconst SearchResults= () => {\n  \n  const dateDiffs = (checkInDate, checkOutDate) => {\n    const inDate = moment(checkInDate)\n    const outDate = moment(checkOutDate)\n    return outDate.diff(inDate, \"days\" )\n    \n  };\n  return(\n  <table class=\"table table-bordered\">\n  <thead>\n    <TableRow />\n  </thead>\n  <tbody>\n    \n      {FakeBookings.map((info, index) => (\n        <tr>\n          <td key = \"index\">{info.id}</td>\n          <td key = \"index\">{info.title}</td>\n          <td key = \"index\">{info.firstName}</td>\n          <td key = \"index\">{info.surname}</td>\n          <td key = \"index\">{info.email}</td>\n          <td key = \"index\">{info.roomId}</td>\n          <td key = \"index\">{info.checkInDate}</td>\n          <td key = \"index\">{info.checkOutDate}</td>\n          <td key = \"index\"> {dateDiffs(info.checkInDate, info.checkOutDate)}</td>\n        </tr>\n        \n      ))}\n    \n  </tbody>\n</table>\n\n  )\n\n}\nexport default SearchResults;\n\n/* \n\nInstructions: Within the <SearchResults /> component or its child components, add an onClick handler to each row in the table (hint: on the <tr> element). When clicked, the row is \"selected\" and highlighted with a different colour. When clicked again, the row is unselected and the coloured highlighting is removed.\n\nHint: Use a new state variable for each row to record if the row is selected or not, and use this value to set a class to the className prop of the row.\n\nTest: Verify that each row of your table can be highlighted (on and off) independently when being clicked.\n\n*/"]},"metadata":{},"sourceType":"module"}