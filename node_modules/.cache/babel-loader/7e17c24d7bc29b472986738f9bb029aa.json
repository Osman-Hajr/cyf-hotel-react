{"ast":null,"code":"var _jsxFileName = \"/home/ameer/React/cyf-hotel-react/src/SearchResults.js\";\nimport React, { useState, useEffect } from 'react';\nimport CustomerProfile from './CustomerProfile';\nimport TableHeading from './TableHeading';\nimport TableRow from './TableRow';\n\nconst SearchResults = props => {\n  const bookings = props.results;\n  console.log(\"Search Result results\", results);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    class: \"table table-bordered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableHeading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, bookings.map((info, index) => /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }\n  })))), /*#__PURE__*/React.createElement(CustomerProfile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default SearchResults;\n/* \n\nInstructions: Within the <SearchResults /> component or its child components, add an onClick handler to each row in the table (hint: on the <tr> element). When clicked, the row is \"selected\" and highlighted with a different colour. When clicked again, the row is unselected and the coloured highlighting is removed.\n\nHint: Use a new state variable for each row to record if the row is selected or not, and use this value to set a class to the className prop of the row.\n\nTest: Verify that each row of your table can be highlighted (on and off) independently when being clicked.\n\n*/","map":{"version":3,"sources":["/home/ameer/React/cyf-hotel-react/src/SearchResults.js"],"names":["React","useState","useEffect","CustomerProfile","TableHeading","TableRow","SearchResults","props","bookings","results","console","log","map","info","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,MAAMC,aAAa,GAAGC,KAAD,IAAW;AAC9B,QAAMC,QAAQ,GAAGD,KAAK,CAACE,OAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,uBAAb,EAAsCF,OAAtC;AAEA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACI,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,kBACX,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADH,CAFF,CADF,eAUE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADA;AAiBD,CArBD;;AAsBA,eAAeR,aAAf;AAEA","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport CustomerProfile from './CustomerProfile';\nimport TableHeading from './TableHeading';\nimport TableRow from './TableRow';\n\n\nconst SearchResults= (props) => {\n  const bookings = props.results\n  console.log( \"Search Result results\", results);\n  \n  return(\n  <div>\n    <table class=\"table table-bordered\">\n      <TableHeading />\n      <tbody>\n        {bookings.map((info, index) => (\n           <TableRow />  \n          ))\n        }\n      </tbody>  \n    </table>\n    <CustomerProfile />\n  </div>  \n    \n\n  )\n\n}\nexport default SearchResults;\n\n/* \n\nInstructions: Within the <SearchResults /> component or its child components, add an onClick handler to each row in the table (hint: on the <tr> element). When clicked, the row is \"selected\" and highlighted with a different colour. When clicked again, the row is unselected and the coloured highlighting is removed.\n\nHint: Use a new state variable for each row to record if the row is selected or not, and use this value to set a class to the className prop of the row.\n\nTest: Verify that each row of your table can be highlighted (on and off) independently when being clicked.\n\n*/"]},"metadata":{},"sourceType":"module"}